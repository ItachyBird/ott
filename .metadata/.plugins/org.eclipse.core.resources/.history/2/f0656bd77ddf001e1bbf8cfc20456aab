package com.example.ott.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.example.ott.model.User;
import com.example.ott.model.UserRepo;
import com.example.ott.service.FavouriteService;

@Controller
public class UserController {
    
    @Autowired
    UserRepo urepo;
    
    @Autowired
    FavouriteService favouriteService; // Autowire the FavouriteService to add favorites

    @RequestMapping("indexheader")
    public String IndexHeader() {
        return "index_header";
    }

    @RequestMapping("indexfooter")
    public String IndexFooter() {
        return "index_footer";
    }

    @RequestMapping("catagory")
    public String catagory() {
        return "catagory";
    }

    @RequestMapping("index")
    public String Index() {
        return "index";
    }

    @RequestMapping("signup")
    public String signup() {
        return "signup";
    }

    @RequestMapping("about")
    public String about() {
        return "about";
    }

    @RequestMapping("categories")
    public String categories() {
        return "categories";
    }

    @RequestMapping("admlogin")
    public String adminlogin() {
        return "adminlogin";
    }

    @RequestMapping("fav")
    public String fav() {
        return "fav";
    }

    @RequestMapping("admheader")
    public String admheader() {
        return "admheader";
    }

    @RequestMapping("loginproc")
    public String loginprocess(@RequestParam("uemail") String email, @RequestParam("upass") String password, ModelMap model) {
        User user = urepo.findByEmail(email);
        if (user != null && user.getPassword().equals(password)) {
            model.addAttribute("userId", user.getId()); // Add user ID to the model
            return "admin_dashboard";
        } else {
            model.put("msg", "Email or password incorrect");
            return "adminlogin";
        }
    }
    
    @RequestMapping("admloginproc")
    public String admLoginProc(@RequestParam("uemail")String email, @RequestParam("upass")String pass, ModelMap model) {
        if(email.equals("admin@gmail.com") && pass.equals("admin")) {
            return "admin_dashboard";
        } else {
            model.put("msg", "email or password error!");
            return "adminlogin";
        }
    }

    @RequestMapping("dlogin")
    public String dlogin() {
        return "admin_dashboard";
    }

    @RequestMapping("regprocess")
    public String register(@RequestParam("uname") String name, @RequestParam("uemail") String email,
            @RequestParam("uphno") String phno, @RequestParam("upass") String pass,
            @RequestParam("upass") String password, @RequestParam("uans") String answer) {
        User u = new User();
        u.setName(name);
        u.setEmail(email);
        u.setPhno(phno);
        u.setPassword(password);
        u.setAnswer(answer);
        urepo.save(u);
        return "index";
    }
    

 // Request mapping to add movie to favorites
    @RequestMapping("/addtofavorites")
    public String addToFavorites(@RequestParam("userEmail") String userEmail, @RequestParam("movieId") Long movieId) {
        // Fetch the user from the database based on the email
    	
        User user = urepo.findByEmail(userEmail);
        
        if (user != null) {
            Integer userId = user.getId(); // Get the user ID
            
            // Call the FavouriteService to add the movie to favorites
            favouriteService.addFavorite(userId, movieId);
            
            return "redirect:/"; // Redirect to the home page or any other page after adding to favorites
        } else {
            // Handle case when user is not found
            // You can redirect to an error page or perform any other action
            return "redirect:/error";
        }
    }

}
